{
  "name": "medusa-starter-default",
  "version": "0.0.1",
  "description": "A starter for Medusa projects.",
  "author": "Medusa (https://medusajs.com)",
  "license": "MIT",
  "keywords": [
    "sqlite",
    "postgres",
    "typescript",
    "ecommerce",
    "headless",
    "medusa"
  ],
  "scripts": {
    "build": "medusa build",
    "seed": "medusa exec ./src/scripts/seed.ts",
    "seed:demo": "medusa exec ./src/scripts/seed-demo-customer.ts",
    "seed:detailed": "medusa exec ./src/scripts/seed-detailed-shipping.ts",
    "seed:loyalty": "medusa exec ./src/scripts/seed-loyalty-rewards.ts",
    "script:seed:loyalty": "node -e \"require('ts-node/register');(async()=>{const m=require('./src/scripts/seed-loyalty-rewards.ts'); if(m.default) await m.default(); else if(typeof m==='function') await m();})();\"",
    "db:apply:schema": "medusa exec ./src/scripts/apply-schema.ts",
    "script:apply:schema": "node -e \"require('ts-node/register');(async()=>{const m=require('./src/scripts/apply-schema.ts'); if(m.default) await m.default(); else if(typeof m==='function') await m();})();\"",
    "script:check:extensions": "node -e \"require('ts-node/register');(async()=>{const m=require('./src/scripts/check-extensions.ts'); if(m.default) await m.default(); else if(typeof m==='function') await m();})();\"",
    "start": "medusa start",
    "dev": "medusa develop",
    "migrations:run": "medusa db:migrate",
    "db:introspect": "medusa exec ./src/scripts/db-introspect.ts",
    "script:db:introspect": "node -e \"require('ts-node/register');(async()=>{const m=require('./src/scripts/db-introspect.ts'); if(m.default) await m.default(); else if(typeof m==='function') await m();})();\"",
    "db:check:extensions": "medusa exec ./src/scripts/check-extensions.ts",
  "ensure:publishable-key": "medusa exec ./src/scripts/ensure-publishable-key.ts",
    "test:integration:http": "TEST_TYPE=integration:http NODE_OPTIONS=--experimental-vm-modules jest --silent=false --runInBand --forceExit",
    "test:integration:modules": "TEST_TYPE=integration:modules NODE_OPTIONS=--experimental-vm-modules jest --silent --runInBand --forceExit",
    "test:unit": "TEST_TYPE=unit NODE_OPTIONS=--experimental-vm-modules jest --silent --runInBand --forceExit"
  },
  "dependencies": {
    "@agilo/medusa-analytics-plugin": "^1.1.0",
    "@medusajs/admin-sdk": "2.8.5",
    "@medusajs/cli": "2.8.5",
    "@medusajs/event-bus-redis": "^2.10.1",
    "@medusajs/framework": "2.8.5",
    "@medusajs/locking-redis": "^2.10.1",
    "@medusajs/medusa": "2.8.5",
    "@mikro-orm/core": "6.4.3",
    "@mikro-orm/knex": "6.4.3",
    "@mikro-orm/migrations": "6.4.3",
    "@mikro-orm/postgresql": "6.4.3",
    "awilix": "^8.0.1",
    "pg": "^8.13.0",
    "resend": "^4.7.0"
  },
  "devDependencies": {
    "@medusajs/admin-bundler": "2.8.5",
    "@medusajs/dashboard": "2.8.5",
    "@medusajs/test-utils": "2.8.5",
    "@mikro-orm/cli": "6.4.3",
    "@swc/core": "1.5.7",
    "@swc/jest": "^0.2.36",
    "@types/jest": "^29.5.13",
    "@types/node": "^20.0.0",
    "@types/react": "^18.3.2",
    "@types/react-dom": "^18.2.25",
    "jest": "^29.7.0",
    "prop-types": "^15.8.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.2",
    "vite": "^5.2.11",
    "yalc": "^1.0.0-pre.53"
  },
  "engines": {
    "node": ">=20"
  }
}
